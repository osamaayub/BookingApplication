{"version":3,"sources":["utils/Firebase.js","utils/utilFunctions.js","components/GlobalStyles/ModalStyles.js","components/ImageUpload/ImageUpload.js","graphql/mutations/hotelMutations.js","components/Modals/HotelModal.js","pages/Profile/Profile.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","getDate","d","moment","format","getEasyDate","getAge","cur","dob","diff","imageUpload","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","file","refPath","reference","uploadTask","promise","wrap","_context2","prev","next","alert","abrupt","ref","uploadBytesResumable","on","snapshot","error","toast","autoClose","pauseOnHover","getDownloadURL","Promise","resolve","then","_ref2","_callee","res","_context","url","sent","stop","_x3","apply","arguments","_x","_x2","bulkImageUpload","_ref3","_callee4","images","room","result","_context4","length","all","map","_ref4","_callee3","image","idx","imgID","_context3","uuidv4","concat","id","push","uuid","_x6","_x7","_x4","_x5","deleteImageBulk","_ref6","_callee7","roomId","_context7","_ref7","_callee6","imageRef","_context6","deleteObject","_x12","_x13","_x10","_x11","ModalContainer","styled","div","_templateObject","_taggedTemplateLiteral","ModalBox","_templateObject2","ModalTitle","h3","_templateObject3","RoomSelectionBox","_templateObject4","GridContainer","_templateObject5","AddField","_templateObject6","FlexBox","_templateObject7","UploadContainer","ImageContainer","ImageUpload","props","setImageURL","imageUrl","data","styles","setSelected","selected","fileInput","useRef","_useState","useState","BlankImg","_useState2","_slicedToArray","src","setSrc","_useState3","_useState4","popup","setPopup","_useState5","_useState6","setImage","_useState7","unit","x","y","width","height","aspect","_useState8","crop","setCrop","_useState9","_useState10","preview","setPreview","_useState11","_useState12","setImageFile","getCroppedImg","e","preventDefault","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","base64Image","toDataURL","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","dataURLtoFile","_jsxs","children","_jsx","_Fragment","ReactCrop","onImageLoaded","onChange","ButtonsContainer","FormButton","className","onClick","single","current","click","style","alt","includes","DeleteOutlineIcon","sl","filter","s","_toConsumableArray","Input","accept","target","files","URL","createObjectURL","displayChange","display","ADD_HOTEL","gql","UPDATE_HOTEL","HotelModal","_props$hotel","propsHotel","hotel","user","JSON","parse","localStorage","getItem","hide","setHide","loading","setLoading","name","description","ratings","totalRooms","location","setHotel","_useMutation","useMutation","MAKE_MANAGER","variables","makeManager","_useMutation3","addHotel","_useMutation5","refetchQueries","GET_HOTEL","updateHotel","updateCurHotel","assignedrooms","Object","keys","roomsMap","warning","success","onClose","setHotelModal","catch","err","message","addNewHotel","manager","setItem","stringify","Loader","CloseIcon","title","val","_objectSpread","onSubmit","action","required","marginBottom","value","placeholder","TextArea","Number","marginLeft","marginTop","Fields","Badge","Profile","setPage","useContext","GlobalContext","state","param","open","setOpen","showBtn","setShowBtn","curUser","setCurUser","useEffect","UPDATE_USER","GET_USER","updateProfile","email","PageContainer","maxWidth","marginRight","Text","position","isManager","joined","isAdmin","margin","borderRadius","params","username","DatePicker","Date","date"],"mappings":"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","file":"static/js/7.65de1def.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getStorage, ref} from 'firebase/storage'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA3VHRbj4knFBXK3YVFdsr7xn2MvE1A0_E\",\r\n    authDomain: \"hotel-booking-app-2c070.firebaseapp.com\",\r\n    projectId: \"hotel-booking-app-2c070\",\r\n    storageBucket: \"hotel-booking-app-2c070.appspot.com\",\r\n    messagingSenderId: \"308536271440\",\r\n    appId: \"1:308536271440:web:cf389c892a5fa653486755\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app)\r\n\r\nexport {\r\n    storage\r\n}\r\n","import { getDownloadURL, ref, uploadBytesResumable, deleteObject } from '@firebase/storage'\r\nimport moment from 'moment'\r\nimport { toast } from 'react-toastify'\r\nimport { storage } from \"./Firebase\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const getDate = (d) => {\r\n    return moment(d).format('DD/MM/YYYY')\r\n}\r\n\r\nexport const getEasyDate = (d) => {\r\n    let dT = moment(d).format('Do MMMM, YYYY')\r\n    return dT\r\n}\r\n\r\nexport const getAge = (d) => {\r\n    let cur = moment()\r\n    let dob = moment(d).format('YYYY')\r\n    var diff = cur.diff(dob, 'years')\r\n    return diff\r\n}\r\n\r\nexport const isDate = (d) => {\r\n    let dT = moment(d).isValid()\r\n    return dT\r\n}\r\n\r\nexport const imageUpload = async (file, refPath) => {\r\n    if (!file) {\r\n        alert(\"No file found.\")\r\n        return\r\n    }\r\n    const reference = ref(storage, refPath)\r\n    const uploadTask = uploadBytesResumable(reference, file)\r\n    let promise\r\n\r\n    uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => { },\r\n        error => {\r\n            toast.error(error, {\r\n                autoClose: 5500,\r\n                pauseOnHover: true\r\n            })\r\n        },\r\n        () => {\r\n            promise = getDownloadURL(uploadTask.snapshot.ref)\r\n        }\r\n    )\r\n    return await Promise.resolve(uploadTask)\r\n        .then(async res =>\r\n            await Promise.resolve(promise)\r\n                .then(url => url)\r\n        )\r\n}\r\n\r\nexport const bulkImageUpload = async (images, room) => {\r\n    if (!images || images.length === 0) {\r\n        alert(\"No file found.\")\r\n        return\r\n    }\r\n    const result = []\r\n\r\n    await Promise.all(images.map(async (image, idx) => {\r\n        const imgID = uuidv4()\r\n        let refPath = `images/rooms/${room.id}/roomImage-${imgID}`\r\n        let url = await imageUpload(image, refPath)\r\n        result.push({ url: url, uuid: imgID })\r\n    }));\r\n\r\n    return result\r\n}\r\n\r\n\r\nexport const deleteImage = async (imgID, roomId) => {\r\n    const imageRef = ref(storage, `images/rooms/${roomId}/roomImage-${imgID}`);\r\n    await deleteObject(imageRef)\r\n}\r\n\r\nexport const deleteImageBulk = async (images, roomId) => {\r\n    await Promise.all(images.map(async (image, idx) => {\r\n        const imgID = image.uuid\r\n        const imageRef = ref(storage, `images/rooms/${roomId}/roomImage-${imgID}`);\r\n        await deleteObject(imageRef)\r\n    }));\r\n}","import styled from 'styled-components'\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #000000d1;\r\n    z-index: 9999999\r\n`\r\n\r\nexport const ModalBox = styled.div`;\r\n    width: 700px;\r\n    max-height: 80vh;\r\n    overflow-y: scroll;\r\n    background: #fff;\r\n    padding: 20px;\r\n    border-radius: 6px;\r\n    position: relative;\r\n    .close-icon{\r\n        position: absolute;\r\n        top: 20px;\r\n        right: 20px;\r\n        cursor: pointer\r\n    }\r\n    @media(max-width: 700px){\r\n        width: calc(100vw - 40px);\r\n    }\r\n`\r\n\r\nexport const ModalTitle = styled.h3`\r\n    font-weight: 26px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px\r\n`\r\n\r\nexport const RoomSelectionBox = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));\r\n    justify-content: center;\r\n    row-gap: 16px;\r\n    column-gap: 16px;\r\n    div{\r\n        width: 40px;\r\n        height: 40px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: 1px solid red;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n    }\r\n    .assigned{\r\n        background: #ffadad\r\n    }\r\n    .selected{\r\n        background: #8dffd0;\r\n        border-color: green\r\n    }\r\n`\r\n\r\nexport const GridContainer = styled.div`\r\n    margin-bottom: 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 16px;\r\n`\r\n\r\nexport const AddField = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    background: #ffcdb8;\r\n    height: 160px;\r\n    .plus-icon{\r\n        color: #9a9a9a !important;\r\n        font-size: 40px !important;\r\n    }\r\n`\r\n\r\nexport const FlexBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between\r\n`","import React, { useState, useRef } from 'react'\r\nimport { FormButton, Input } from '../GlobalStyles/FormStyles'\r\nimport styled from 'styled-components'\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { ModalBox, ModalContainer } from '../GlobalStyles/ModalStyles';\r\nimport { ButtonsContainer } from '../../pages/Auth/ModuleStyles';\r\nimport BlankImg from \"../../assets/hotel.png\"\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst UploadContainer = styled.div`\r\n    margin-bottom: 20px;\r\n    background: #e2e2e2;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    height: 260px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    &.selected{\r\n        border: 2px red solid\r\n    }\r\n    img{\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n    }\r\n    .delete-icon{\r\n        position: absolute;\r\n        bottom: 2px;\r\n        right: 2px;\r\n        background: white;\r\n        padding: 2px;\r\n        border-radius: 4px\r\n    }\r\n`\r\n\r\nconst ImageUpload = (props) => {\r\n\r\n    const { setImageURL, imageUrl, data, styles, setSelected, selected } = props\r\n    const fileInput = useRef(null)\r\n\r\n    const [src, setSrc] = useState(imageUrl ? imageUrl : BlankImg);\r\n\r\n    const [popup, setPopup] = useState(false); //For popup box\r\n    const [image, setImage] = useState(null); //For setting crop image\r\n\r\n    const [crop, setCrop] = useState({\r\n        unit: 'px', // default, can be 'px' or '%'\r\n        x: 130,\r\n        y: 50,\r\n        width: 160,\r\n        height: 90,\r\n        aspect: 16 / 9\r\n    }); //Fro setting crop value\r\n\r\n    const [preview, setPreview] = useState(''); //For showing the preview to users\r\n    const [imageFile, setImageFile] = useState({}); //For setting the imagefile after upload\r\n\r\n    const displayChange = e => {\r\n        e.preventDefault();\r\n        setImageFile(e.target.files[0]);\r\n        setSrc(URL.createObjectURL(e.target.files[0]));\r\n        setPopup(true);\r\n    }\r\n\r\n\r\n    const dataURLtoFile = (dataurl, filename) => {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], filename, { type: mime });\r\n    }\r\n\r\n\r\n    function getCroppedImg(e) {\r\n        e.preventDefault();\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height,\r\n        );\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n        var file = dataURLtoFile(base64Image, \"file.jpg\");\r\n        setPreview(base64Image);\r\n        setImageURL(file)\r\n        setPopup(false)\r\n    }\r\n\r\n    const closeCrop = () => {\r\n        setSrc(imageUrl);\r\n        setPopup(false)\r\n    }\r\n\r\n    const selectForDelete = () => {\r\n        if (selected.includes(data.uuid)) {\r\n            let sl = selected.filter(s => s !== data.uuid)\r\n            setSelected(sl)\r\n        }\r\n        else {\r\n            setSelected([...selected, data.uuid])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <UploadContainer>\r\n            {popup && (\r\n                <ModalContainer>\r\n                    <ModalBox>\r\n                        {src && (\r\n                            <>\r\n                                <ReactCrop src={src} onImageLoaded={setImage}\r\n                                    crop={crop} onChange={setCrop} />\r\n                                <ButtonsContainer>\r\n                                    <FormButton className=\"crop-btn\"\r\n                                        onClick={() => closeCrop()}>\r\n                                        Cancel\r\n                                    </FormButton>\r\n                                    <FormButton className=\"crop-btn\"\r\n                                        onClick={(e) => getCroppedImg(e)}>\r\n                                        Crop & Upload Image\r\n                                    </FormButton>\r\n                                </ButtonsContainer>\r\n                            </>\r\n                        )}\r\n                    </ModalBox>\r\n                </ModalContainer>\r\n            )}\r\n\r\n            {props.single ? (\r\n                <ImageContainer onClick={() => !imageUrl ? fileInput.current.click() : null} style={styles}>\r\n                    {preview ? <img src={preview} alt=\"\" /> : <img src={src} alt=\"\" />}\r\n                </ImageContainer>\r\n            ) : (\r\n                <ImageContainer onClick={() => !imageUrl ? fileInput.current.click() : null} style={styles}\r\n                    className={`${selected.includes(data.uuid) ? 'selected' : ''}`}>\r\n                    {preview ? <img src={preview} alt=\"\" /> : <img src={src} alt=\"\" />}\r\n                    {imageUrl && <DeleteOutlineIcon className=\"delete-icon\" onClick={selectForDelete} />}\r\n                </ImageContainer>\r\n            )}\r\n\r\n            <Input type=\"file\" accept=\"image/*\" onChange={(e) => displayChange(e)}\r\n                style={{ display: 'none' }}\r\n                ref={fileInput}>\r\n            </Input>\r\n        </UploadContainer>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_HOTEL = gql`\r\nmutation($image: String, $name: String!, $description: String!, $totalRooms: Int!, $location: String!, $manager: ID!){\r\n    addHotel(manager: $manager, image: $image, name: $name, description: $description, totalRooms: $totalRooms, location: $location){\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport const UPDATE_HOTEL = gql`\r\nmutation($id: ID!, $image: String, $name: String!, $description: String!, $ratings: Int, $totalRooms: Int!, $location: String!){\r\n    updateHotel(id: $id, image: $image, name: $name, description: $description, ratings: $ratings, totalRooms: $totalRooms, location: $location){\r\n      id\r\n      name\r\n    }\r\n  }\r\n`","import { useMutation } from '@apollo/client'\r\nimport React, { useState } from 'react'\r\nimport { FormButton, Input, TextArea } from '../GlobalStyles/FormStyles'\r\nimport { ModalBox, ModalContainer, ModalTitle } from '../GlobalStyles/ModalStyles'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport \"./animation.css\"\r\nimport { GET_HOTEL } from '../../graphql/queries/hotelQueries'\r\nimport { ADD_HOTEL, UPDATE_HOTEL } from '../../graphql/mutations/hotelMutations'\r\nimport ImageUpload from '../ImageUpload/ImageUpload';\r\nimport { imageUpload } from '../../utils/utilFunctions';\r\nimport Loader from '../Loaders/Loader';\r\nimport { MAKE_MANAGER } from '../../graphql/mutations/userMutations';\r\n\r\nconst HotelModal = (props) => {\r\n\r\n    const propsHotel = props.hotel\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [hide, setHide] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [hotel, setHotel] = useState({\r\n        name: propsHotel ? propsHotel.name : '',\r\n        description: propsHotel ? propsHotel.description : '',\r\n        id: props.hotel ? props.hotel.id : null,\r\n        image: propsHotel ? propsHotel.image : '',\r\n        ratings: propsHotel ? propsHotel.ratings : null,\r\n        totalRooms: propsHotel ? propsHotel.totalRooms : null,\r\n        location: propsHotel ? propsHotel.location : ''\r\n    })\r\n\r\n    const [makeManager] = useMutation(MAKE_MANAGER, {\r\n        variables: {\r\n            id: user.id\r\n        }\r\n    })\r\n\r\n    const [addHotel] = useMutation(ADD_HOTEL)\r\n\r\n    const [updateHotel] = useMutation(UPDATE_HOTEL, {\r\n        refetchQueries: [\r\n            GET_HOTEL,\r\n            { variables: { id: props.hotel?.id } }\r\n        ],\r\n    })\r\n\r\n    const updateCurHotel = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        const assignedrooms = Object.keys(propsHotel.roomsMap).length\r\n        if (assignedrooms > hotel.totalRooms) {\r\n            toast.warning(`You have already assigned ${assignedrooms} rooms. Unassign those rooms to decrease room numbers.`, {\r\n                autoClose: 5500,\r\n                pauseOnHover: true\r\n            })\r\n            return\r\n        }\r\n\r\n        const refPath = `images/hotels/${hotel.id}/hotelImage`\r\n        let imageUrl = null\r\n        if (typeof hotel.image !== 'string') {\r\n            imageUrl = await imageUpload(hotel.image, refPath)\r\n        }\r\n\r\n        updateHotel({\r\n            variables: {\r\n                name: hotel.name,\r\n                description: hotel.description,\r\n                id: hotel.id,\r\n                image: imageUrl ? imageUrl : hotel.image,\r\n                ratings: hotel.ratings,\r\n                totalRooms: hotel.totalRooms,\r\n                location: hotel.location\r\n            }\r\n        })\r\n            .then(res => {\r\n                toast.success(\"Updated hotel.\", {\r\n                    autoClose: 5500,\r\n                    pauseOnHover: true,\r\n                    onClose: props.setHotelModal(false)\r\n                })\r\n                setHide(true)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.message, {\r\n                    autoClose: 5500,\r\n                    pauseOnHover: true\r\n                })\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const addNewHotel = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        addHotel({\r\n            variables: {\r\n                manager: user.id,\r\n                image: null,\r\n                name: hotel.name,\r\n                description: hotel.description,\r\n                totalRooms: hotel.totalRooms,\r\n                location: hotel.location\r\n            }\r\n        })\r\n            .then(async res => {\r\n                const refPath = `images/hotels/${res.data.addHotel.id}/hotelImage`\r\n                let imageUrl = null\r\n                if (typeof hotel.image !== 'string') {\r\n                    imageUrl = await imageUpload(hotel.image, refPath)\r\n                }\r\n                updateHotel({\r\n                    variables: {\r\n                        name: hotel.name,\r\n                        description: hotel.description,\r\n                        id: res.data.addHotel.id,\r\n                        image: imageUrl,\r\n                        ratings: res.data.addHotel.ratings,\r\n                        totalRooms: hotel.totalRooms,\r\n                        location: hotel.location\r\n                    }\r\n                })\r\n                    .then(res => {\r\n                        toast.success(\"Hotel added.\",{\r\n                            autoClose: 5500,\r\n                            pauseOnHover: true\r\n                        })\r\n                        makeManager({\r\n                            variables: {\r\n                                id: user.id\r\n                            }\r\n                        }).then(res => {\r\n                            localStorage.setItem('user', JSON.stringify(res.data.makeManager))\r\n                            setHide(true)\r\n                            setLoading(false)\r\n                            props.setHotelModal(false)\r\n                        })\r\n                        .catch(err => {\r\n                            toast.error(err.message, {\r\n                                autoClose: 5500,\r\n                                pauseOnHover: true\r\n                            })\r\n                            setLoading(false)\r\n                        })\r\n                    })\r\n                    .catch(err => {\r\n                        toast.error(err.message, {\r\n                            autoClose: 5500,\r\n                            pauseOnHover: true\r\n                        })\r\n                        setLoading(false)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.message, {\r\n                    autoClose: 5500,\r\n                    pauseOnHover: true\r\n                })\r\n                setLoading(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <ModalContainer>\r\n            <ModalBox className=\"modal-box\">\r\n                {!loading ? (\r\n                    <>\r\n                        <CloseIcon className=\"close-icon\" onClick={() => props.setHotelModal(false)} />\r\n                        <ModalTitle>{props.title}</ModalTitle>\r\n                        <ImageUpload imageUrl={hotel.image} refPath={`images/hotels/${hotel.id}/hotelImage`}\r\n                            setImageURL={(val) => setHotel({ ...hotel, image: val })} single={true} />\r\n\r\n                        <form onSubmit={props.action === 'update' ? updateCurHotel : addNewHotel}>\r\n                            <Input required=\"true\" style={{ marginBottom: '16px' }}\r\n                                value={hotel.name} onChange={(e) => setHotel({ ...hotel, name: e.target.value })}\r\n                                placeholder=\"Hotel name\">\r\n                            </Input>\r\n\r\n                            <TextArea required=\"true\" style={{ marginBottom: '16px' }}\r\n                                value={hotel.description} onChange={(e) => setHotel({ ...hotel, description: e.target.value })}\r\n                                placeholder=\"Hotel description\"></TextArea>\r\n\r\n                            <Input required=\"true\" style={{ marginBottom: '16px' }}\r\n                                value={hotel.location} onChange={(e) => setHotel({ ...hotel, location: e.target.value })}\r\n                                placeholder=\"Location\"></Input>\r\n\r\n                            <Input required=\"true\" style={{ marginBottom: '16px' }}\r\n                                value={hotel.totalRooms} onChange={(e) => setHotel({ ...hotel, totalRooms: Number(e.target.value) })}\r\n                                placeholder=\"Total Rooms\"></Input>\r\n\r\n                            {!hide && (\r\n                                <FormButton type=\"submit\"\r\n                                    style={{ marginLeft: 'auto', marginTop: '40px' }}>\r\n                                    {props.title}\r\n                                </FormButton>\r\n                            )}\r\n                        </form>\r\n                    </>\r\n                ) : <Loader />}\r\n            </ModalBox>\r\n        </ModalContainer>\r\n    )\r\n}\r\n\r\nexport default HotelModal\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { PageContainer, Text } from '../../components/GlobalStyles/PageStyles'\r\nimport { GlobalContext } from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport { FormButton, Input } from '../../components/GlobalStyles/FormStyles'\r\nimport { getEasyDate } from '../../utils/utilFunctions'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport HotelModal from '../../components/Modals/HotelModal'\r\nimport { useMutation } from '@apollo/client'\r\nimport { GET_USER } from '../../graphql/queries/userQueries'\r\nimport { UPDATE_USER } from '../../graphql/mutations/userMutations'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Fields = styled.div`\r\n    margin-bottom: 16px;\r\n    width: 100%;\r\n    &.flex{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        .first{\r\n            margin-right: 16px\r\n        }\r\n    }\r\n    label{\r\n        display: block;\r\n        margin-bottom: 10px\r\n    }\r\n`\r\n\r\nconst Badge = styled.div`\r\n    position: absolute;\r\n    top: -20px;\r\n    right: -30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n    background: #4158ff;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n`\r\n\r\nconst Profile = () => {\r\n\r\n    const { setPage } = useContext(GlobalContext)\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const [open, setOpen] = useState({\r\n        state: false,\r\n        title: '',\r\n        param: null,\r\n        action: ''\r\n    })\r\n    const [showBtn, setShowBtn] = useState(false)\r\n\r\n    const [curUser, setCurUser] = useState(user)\r\n\r\n    useEffect(() => {\r\n        setPage(\"Profile\")\r\n    }, [])\r\n\r\n    const [updateProfile] = useMutation(UPDATE_USER, {\r\n        refetchQueries: [\r\n            GET_USER,\r\n            {\r\n                variables: {\r\n                    id: user.id\r\n                }\r\n            }\r\n        ]\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(curUser.name !== user.name){\r\n            setShowBtn(true)\r\n        }\r\n        else if(curUser.email !== user.email){\r\n            setShowBtn(true)\r\n        }\r\n        else if(curUser.dob !== user.dob){\r\n            setShowBtn(true)\r\n        }else{\r\n            setShowBtn(false)\r\n        }\r\n    }, [curUser])\r\n\r\n    const updateUser = () => {\r\n        updateProfile({\r\n            variables: {\r\n                id: '',\r\n                name: curUser.name,\r\n                email: curUser.email,\r\n                dob: curUser.dob,\r\n                username: curUser.username\r\n            }\r\n        }).then(res => {\r\n            setShowBtn(false)\r\n            localStorage.setItem('user', JSON.stringify(res.data.updateProfile))\r\n            toast.success(\"User details updated.\", {\r\n                autoClose: 5500,\r\n                pauseOnHover: true,\r\n            })\r\n        }).catch(err => {\r\n            setShowBtn(false)\r\n            toast.error(err.message, {\r\n                autoClose: 5500,\r\n                pauseOnHover: true,\r\n            })\r\n            setCurUser(user)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PageContainer style={{ maxWidth: '800px', marginLeft: 'auto', marginRight: 'auto' }}>\r\n\r\n            {open.state && (<HotelModal\r\n                action={open.action} title={open.title} hotel={null}\r\n                setHotelModal={setOpen} />)}\r\n\r\n            <Text style={{ position: 'relative', width: 'fit-content' }}>\r\n                Hello {user.name}\r\n                {user.isManager && (<Badge>M</Badge>)}\r\n            </Text>\r\n            <Text className='small' style={{ marginBottom: '8px' }}>\r\n                Joined on {getEasyDate(user.joined)}\r\n            </Text>\r\n            <Text className='small'>Type: {user.isManager ? 'Hotel Manager' : user.isAdmin ? 'Admin' : 'User'}</Text>\r\n            {!user.isManager ?\r\n                <FormButton style={{ margin: '16px 0', borderRadius: '2px' }}\r\n                    onClick={() => setOpen({ state: true, title: 'Add Hotel', params: null, action: 'add' })}>\r\n                    Add My Hotel</FormButton>\r\n                : null}\r\n\r\n            <Fields className='flex'>\r\n                <Fields className='first'>\r\n                    <label>Name</label>\r\n                    <Input value={curUser.name}\r\n                        onChange={(e) => setCurUser({ ...curUser, name: e.target.value })}></Input>\r\n                </Fields>\r\n                <Fields>\r\n                    <label>Username</label>\r\n                    <Input value={user.username}></Input>\r\n                </Fields>\r\n            </Fields>\r\n\r\n            <Fields className='flex'>\r\n                <Fields className='first'>\r\n                    <label>E-Mail</label>\r\n                    <Input value={curUser.email}\r\n                        onChange={(e) => setCurUser({ ...curUser, email: e.target.value })}></Input>\r\n                </Fields>\r\n                <Fields>\r\n                    <label>DOB</label>\r\n                    {/* <Input value={getEasyDate(user.dob)}></Input> */}\r\n                    <DatePicker selected={new Date(curUser.dob)}\r\n                        onChange={(date) => setCurUser({ ...curUser, dob: date })}\r\n                    />\r\n                </Fields>\r\n            </Fields>\r\n\r\n            {showBtn ? (<FormButton style={{ marginLeft: 'auto' }} onClick={updateUser}>Update & Save</FormButton>) : null}\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}